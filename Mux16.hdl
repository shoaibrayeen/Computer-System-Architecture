// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux16.hdl

/**
 * 16-bit multiplexor: 
 * for i = 0..15 out[i] = a[i] if sel == 0 
 *                        b[i] if sel == 1
 */

CHIP Mux16 {
    IN a[16], b[16], sel;
    OUT out[16];

    PARTS:
    // Put your code here:
	Not(a=sel,out=w);
	
	And(a=a[0],b=w,out=w[0]);
	And(a=a[1],b=w,out=w[1]);
	And(a=a[2],b=w,out=w[2]);
	And(a=a[3],b=w,out=w[3]);
	And(a=a[4],b=w,out=w[4]);
	And(a=a[5],b=w,out=w[5]);
	And(a=a[6],b=w,out=w[6]);
	And(a=a[7],b=w,out=w[7]);
	And(a=a[8],b=w,out=w[8]);
	And(a=a[9],b=w,out=w[9]);
	And(a=a[10],b=w,out=w[10]);
	And(a=a[11],b=w,out=w[11]);
	And(a=a[12],b=w,out=w[12]);
	And(a=a[13],b=w,out=w[13]);
	And(a=a[14],b=w,out=w[14]);
	And(a=a[15],b=w,out=w[15]);

	And(a=b[0],b=sel,out=v[0]);
	And(a=b[1],b=sel,out=v[1]);
	And(a=b[2],b=sel,out=v[2]);
	And(a=b[3],b=sel,out=v[3]);
	And(a=b[4],b=sel,out=v[4]);
	And(a=b[5],b=sel,out=v[5]);
	And(a=b[6],b=sel,out=v[6]);
	And(a=b[7],b=sel,out=v[7]);
	And(a=b[8],b=sel,out=v[8]);
	And(a=b[9],b=sel,out=v[9]);
	And(a=b[10],b=sel,out=v[10]);
	And(a=b[11],b=sel,out=v[11]);
	And(a=b[12],b=sel,out=v[12]);
	And(a=b[13],b=sel,out=v[13]);
	And(a=b[14],b=sel,out=v[14]);
	And(a=b[15],b=sel,out=v[15]);

	Or(a=w[0],b=v[0],out[0]=out[0]);
	Or(a=w[1],b=v[1],out[1]=out[1]);
	Or(a=w[2],b=v[2],out[2]=out[2]);
	Or(a=w[3],b=v[3],out[3]=out[3]);
	Or(a=w[4],b=v[4],out[4]=out[4]);
	Or(a=w[5],b=v[5],out[5]=out[5]);
	Or(a=w[6],b=v[6],out[6]=out[6]);
	Or(a=w[7],b=v[7],out[7]=out[7]);
	Or(a=w[8],b=v[8],out[8]=out[8]);
	Or(a=w[9],b=v[9],out[9]=out[9]);
	Or(a=w[10],b=v[10],out[10]=out[10]);
	Or(a=w[11],b=v[11],out[11]=out[11]);
	Or(a=w[12],b=v[12],out[12]=out[12]);
	Or(a=w[13],b=v[13],out[13]=out[13]);
	Or(a=w[14],b=v[14],out[14]=out[14]);
	Or(a=w[15],b=v[15],out[15]=out[15]);
}
